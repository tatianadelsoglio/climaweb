{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.163f31b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({titulo}) => {\r\n    return(\r\n        <>\r\n            <nav>\r\n                <div className=\"navwreapper light-blue darken-2\">\r\n\r\n                    <a href=\"#!\" className=\"brand-logo\">{titulo}</a>\r\n\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <p className=\"red darken-4 error\">{mensaje}</p>\r\n    );\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, {useState} from 'react';\r\nimport Error  from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\r\n\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //extraer ciudad y país\r\n    const {ciudad, pais} = busqueda;\r\n\r\n    //funcion que coloca los elementos en el state\r\n    const handleChange = e =>{\r\n        //actualizar el state\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    }\r\n\r\n    //Cuando el usuario prresiona submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if(ciudad.trim()==='' || pais.trim()===''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //pasa al componente principal\r\n        guardarConsultar(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {error ? <Error mensaje=\"Ambos campos son obligatorios\"/> : null}\r\n\r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"ciudad\"\r\n                        id=\"ciudad\"\r\n                        value={ciudad}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"ciudad\">Ciudad: </label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <select\r\n                        name=\"pais\"\r\n                        id=\"pais\"\r\n                        value={pais}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option value=\"\">--Seleccione un país--</option>\r\n                        <option value=\"US\">Estados Unidos</option>\r\n                        <option value=\"MX\">México</option>\r\n                        <option value=\"AR\">Argentina</option>\r\n                        <option value=\"CO\">Colombia</option>\r\n                        <option value=\"CR\">Costa Rica</option>\r\n                        <option value=\"ES\">España</option>\r\n                        <option value=\"PE\">Perú</option>\r\n                    </select>\r\n                    <label htmlFor=\"pais\">País: </label>\r\n                </div>\r\n\r\n                <div className=\"input-field col s12\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"waves-effect waves-light btn-large btn-block yellow accent-4 col s12\"\r\n                    >Buscar Clima</button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    busqueda: PropTypes.object.isRequired,\r\n    guardarBusqueda: PropTypes.func.isRequired,\r\n    guardarConsultar: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clima = ({resultado}) => {\r\n\r\n    //extraer valorres\r\n    const {name, main} = resultado;\r\n\r\n    if(!name) return null;\r\n\r\n    //Grados Kelvin\r\n    const kelvin = 273.15;\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card-panel white col s12\">\r\n                <div className=\"black-text\">\r\n                    <h2>El clima de {name} es: </h2>\r\n                    <p className=\"temperatura\">\r\n                        {parseFloat(main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\r\n                    </p>\r\n                    <p>Temperatura Máxima:\r\n                        { parseFloat( main.temp_max - kelvin, 10 ).toFixed(2) }  <span> &#x2103; </span>\r\n                    </p>\r\n                    <p>Temperatura Minima:\r\n                        { parseFloat( main.temp_min - kelvin, 10 ).toFixed(2) }  <span> &#x2103; </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import React, {useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Clima from './components/clima';\nimport Error from './components/Error';\n\nfunction App() {\n\n  //defino state del formulario\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: '',\n    pais: ''\n  });\n\n  //extraer ciudad y país\n  const {ciudad, pais} = busqueda;\n\n  const [consultar, guardarConsultar] = useState(false);\n\n  const [resultado, guardarResultado] = useState({});\n\n  const [error, guardarError] = useState(false);\n\n  useEffect(() => {\n    \n    const consultarAPI = async () => {\n\n      if (consultar) {\n\n        const appId = 'f51866455e5f338819bf3743a81013d8';\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n  \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n  \n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        //Detecta si hay error\n        if(resultado.cod === \"404\"){\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    }\n    consultarAPI();\n\n  }, [ciudad, pais, consultar]);\n\n  let componente;\n  if (error) {\n    componente = <Error mensaje=\"No hay resultado\" />\n  } else {\n    componente = <Clima\n                    resultado = {resultado}\n                  />\n  }\n\n  return (\n    <>\n      <Header\n        titulo='Clima React App'\n      />\n      <div className=\"contenedor-form\">\n        <div className=\"conteiner\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">\n              {componente}\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}